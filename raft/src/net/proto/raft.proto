syntax = "proto3";

import "google/protobuf/empty.proto";

package raft.election;

service Raft {
  rpc acknowledge_request_vote (RequestVote) returns (RequestVoteResponse) {}

  rpc acknowledge_heartbeat (AppendEntries) returns (AppendEntriesResponse) {}

  rpc acknowledge_replicate_log (AppendEntries) returns (AppendEntriesResponse) {}

  rpc execute (Command) returns (google.protobuf.Empty) {}
}

message RequestVote {
  //tag id 1 is reserved for correlation_id generated using procedural macro
  uint64 replicaId = 2;
  uint64 term = 3;
}

message RequestVoteResponse {
  //tag id 1 is reserved for correlation_id generated using procedural macro
  uint64 term = 2;
  bool voted = 3;
}

message AppendEntries {
  //tag id 1 is reserved for correlation_id generated using procedural macro
  uint64 term = 2;
  uint64 leader_id = 3;
  optional Entry entry = 4;
  optional uint64 previous_log_index = 5;
  optional uint64 previous_log_term = 6;
  optional uint64 leader_commit_index = 7;
}

message AppendEntriesResponse {
  //tag id 1 is reserved for correlation_id generated using procedural macro
  uint64 term = 2;
  bool success = 3;
  optional uint64 log_entry_index = 4;
}

message Entry {
  Command command = 1;
  uint64 term = 2;
  uint64 index = 3;
}

message Command {
  bytes command = 1;
}
